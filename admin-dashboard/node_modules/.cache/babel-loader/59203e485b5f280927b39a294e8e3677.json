{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zubai\\\\OneDrive\\\\Documents\\\\GitHub\\\\janimotors1\\\\admin-dashboard\\\\src\\\\views\\\\pages\\\\Category\\\\AllCategories.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AllCategories() {\n  _s();\n\n  const [categoryName, setCategoryName] = useState('');\n  const [categoryImage, setCategoryImage] = useState('');\n  const [parentCategoryId, setParentCategoryId] = useState('');\n  const category = useSelector(state => state.category);\n  const [show, setShow] = useState(false);\n  const [checked, setChecked] = useState([]);\n  const [expanded, setExpanded] = useState([]);\n  const [checkedArray, setCheckedArray] = useState([]);\n  const [expandedArray, setExpandedArray] = useState([]);\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (!category.loading) {\n      setShow(false);\n    }\n  }, [category.loading]);\n\n  const handleClose = () => {\n    const form = new FormData();\n\n    if (categoryName === '') {\n      alert('Category name is required');\n      setShow(false);\n      return;\n    }\n\n    form.append('name', categoryName);\n    form.append('parentId', parentCategoryId);\n    form.append('categoryImage', categoryImage);\n    dispatch(createCategory(form));\n    setCategoryName('');\n    setParentCategoryId('');\n    setShow(false);\n  };\n\n  const handleShow = () => setShow(true);\n\n  const displayCategories = categories => {\n    let Categories = [];\n\n    for (let category of categories) {\n      Categories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && displayCategories(category.children)\n      });\n    }\n\n    return Categories;\n  };\n\n  const createCategoryList = function (categories) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type\n      });\n\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options);\n      }\n    }\n\n    return options;\n  };\n\n  const handleCategoryImage = e => {\n    setCategoryImage(e.target.files[0]);\n  };\n\n  const updateCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setUpdateCategoryModal(true);\n  };\n\n  const updateCheckedAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories);\n    const checkedArray = [];\n    const expandedArray = [];\n    checked.length > 0 && checked.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value);\n      category && checkedArray.push(category);\n    });\n    expanded.length > 0 && expanded.forEach((categoryId, index) => {\n      const category = categories.find((category, _index) => categoryId === category.value);\n      category && expandedArray.push(category);\n    });\n    setCheckedArray(checkedArray);\n    setExpandedArray(expandedArray);\n    console.log({\n      checked,\n      expanded,\n      categories,\n      checkedArray,\n      expandedArray\n    });\n  };\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type === 'checked') {\n      const updatedCheckedArray = checkedArray.map((item, _index) => index === _index ? { ...item,\n        [key]: value\n      } : item);\n      setCheckedArray(updatedCheckedArray);\n    } else if (type === 'expanded') {\n      const updatedExpandedArray = expandedArray.map((item, _index) => index === _index ? { ...item,\n        [key]: value\n      } : item);\n      setExpandedArray(updatedExpandedArray);\n    }\n  };\n\n  const updateCategoryForm = () => {\n    const form = new FormData();\n    expandedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : '');\n      form.append('type', item.type);\n    });\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value);\n      form.append('name', item.name);\n      form.append('parentId', item.parentId ? item.parentId : '');\n      form.append('type', item.type);\n    });\n    dispatch(updateCategories(form));\n    setUpdateCategoryModal(false);\n  };\n\n  const deleteCategory = () => {\n    updateCheckedAndExpandedCategories();\n    setDeleteCategoryModal(true);\n  };\n\n  const deleteCategories = () => {\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const expandedIdsArray = expandedArray.map((item, index) => ({\n      _id: item.value\n    }));\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\n\n    if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then(result => {\n        if (result) {\n          dispatch(getCategory());\n          setDeleteCategoryModal(false);\n        }\n      });\n    }\n\n    setDeleteCategoryModal(false);\n  };\n\n  const displayDeleteCategoryModal = () => {\n    return /*#__PURE__*/_jsxDEV(ReusableModel, {\n      modalTitle: 'Confirm',\n      show: deleteCategoryModal,\n      handleClose: () => setDeleteCategoryModal(false),\n      buttons: [{\n        label: 'No',\n        color: 'primary',\n        onClick: () => {\n          alert('no');\n        }\n      }, {\n        label: 'Yes',\n        color: 'danger',\n        onClick: deleteCategories\n      }],\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Expanded Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Checked Category\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: item.name\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this);\n  };\n\n  const categoryList = createCategoryList(category.categories);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      sidebar: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              component: \"h1\",\n              children: \"Category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              style: {\n                marginLeft: 'auto',\n                backgroundColor: '#323232',\n                color: 'white',\n                fontSize: 'small'\n              },\n              onClick: handleShow,\n              children: \"Add category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(CheckboxTree, {\n            nodes: displayCategories(category.categories),\n            checked: checked,\n            expanded: expanded,\n            onCheck: checked => setChecked(checked),\n            onExpand: expanded => setExpanded(expanded),\n            icons: {\n              check: /*#__PURE__*/_jsxDEV(CheckBoxIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 24\n              }, this),\n              uncheck: /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 26\n              }, this),\n              halfCheck: /*#__PURE__*/_jsxDEV(IndeterminateCheckBoxIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 28\n              }, this),\n              expandClose: /*#__PURE__*/_jsxDEV(ArrowRightIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 30\n              }, this),\n              expandOpen: /*#__PURE__*/_jsxDEV(ArrowDropDownIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 29\n              }, this)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteCategory,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateCategory,\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddCategoryModel, {\n        show: show,\n        handleClose: () => setShow(false),\n        onSubmit: handleClose,\n        modalTitle: 'Add New Category',\n        categoryName: categoryName,\n        setCategoryName: setCategoryName,\n        parentCategoryId: parentCategoryId,\n        setParentCategoryId: setParentCategoryId,\n        handleCategortImage: handleCategoryImage,\n        categoryList: categoryList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(UpdateCategoryModel, {\n        show: updateCategoryModal,\n        handleClose: () => setUpdateCategoryModal(false),\n        onSubmit: updateCategoryForm,\n        size: \"lg\",\n        modalTitle: 'Update Categories',\n        expandedArray: expandedArray,\n        checkedArray: checkedArray,\n        handleCategoryInput: handleCategoryInput,\n        categoryList: categoryList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this), displayDeleteCategoryModal()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 191,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AllCategories, \"O70ExGEDlrdXwOjG7mMXYCOdNSo=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = AllCategories;\n\nvar _c;\n\n$RefreshReg$(_c, \"AllCategories\");","map":{"version":3,"sources":["C:/Users/zubai/OneDrive/Documents/GitHub/janimotors1/admin-dashboard/src/views/pages/Category/AllCategories.js"],"names":["React","useDispatch","useSelector","AllCategories","categoryName","setCategoryName","useState","categoryImage","setCategoryImage","parentCategoryId","setParentCategoryId","category","state","show","setShow","checked","setChecked","expanded","setExpanded","checkedArray","setCheckedArray","expandedArray","setExpandedArray","updateCategoryModal","setUpdateCategoryModal","deleteCategoryModal","setDeleteCategoryModal","dispatch","useEffect","loading","handleClose","form","FormData","alert","append","createCategory","handleShow","displayCategories","categories","Categories","push","label","name","value","_id","children","length","createCategoryList","options","parentId","type","handleCategoryImage","e","target","files","updateCategory","updateCheckedAndExpandedCategories","forEach","categoryId","index","find","_index","console","log","handleCategoryInput","key","updatedCheckedArray","map","item","updatedExpandedArray","updateCategoryForm","updateCategories","deleteCategory","deleteCategories","checkedIdsArray","expandedIdsArray","idsArray","concat","deleteCategoriesAction","then","result","getCategory","displayDeleteCategoryModal","color","onClick","categoryList","display","marginLeft","backgroundColor","fontSize","check","uncheck","halfCheck","expandClose","expandOpen"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\n\nexport default function AllCategories() {\n  const [categoryName, setCategoryName] = useState('')\n  const [categoryImage, setCategoryImage] = useState('')\n  const [parentCategoryId, setParentCategoryId] = useState('')\n  const category = useSelector((state) => state.category)\n  const [show, setShow] = useState(false)\n  const [checked, setChecked] = useState([])\n  const [expanded, setExpanded] = useState([])\n  const [checkedArray, setCheckedArray] = useState([])\n  const [expandedArray, setExpandedArray] = useState([])\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false)\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    if (!category.loading) {\n      setShow(false)\n    }\n  }, [category.loading])\n\n  const handleClose = () => {\n    const form = new FormData()\n\n    if (categoryName === '') {\n      alert('Category name is required')\n      setShow(false)\n      return\n    }\n\n    form.append('name', categoryName)\n    form.append('parentId', parentCategoryId)\n    form.append('categoryImage', categoryImage)\n    dispatch(createCategory(form))\n    setCategoryName('')\n    setParentCategoryId('')\n    setShow(false)\n  }\n  const handleShow = () => setShow(true)\n\n  const displayCategories = (categories) => {\n    let Categories = []\n    for (let category of categories) {\n      Categories.push({\n        label: category.name,\n        value: category._id,\n        children: category.children.length > 0 && displayCategories(category.children),\n      })\n    }\n    return Categories\n  }\n\n  const createCategoryList = (categories, options = []) => {\n    for (let category of categories) {\n      options.push({\n        value: category._id,\n        name: category.name,\n        parentId: category.parentId,\n        type: category.type,\n      })\n      if (category.children.length > 0) {\n        createCategoryList(category.children, options)\n      }\n    }\n    return options\n  }\n\n  const handleCategoryImage = (e) => {\n    setCategoryImage(e.target.files[0])\n  }\n\n  const updateCategory = () => {\n    updateCheckedAndExpandedCategories()\n    setUpdateCategoryModal(true)\n  }\n\n  const updateCheckedAndExpandedCategories = () => {\n    const categories = createCategoryList(category.categories)\n    const checkedArray = []\n    const expandedArray = []\n    checked.length > 0 &&\n      checked.forEach((categoryId, index) => {\n        const category = categories.find((category, _index) => categoryId === category.value)\n        category && checkedArray.push(category)\n      })\n    expanded.length > 0 &&\n      expanded.forEach((categoryId, index) => {\n        const category = categories.find((category, _index) => categoryId === category.value)\n        category && expandedArray.push(category)\n      })\n    setCheckedArray(checkedArray)\n    setExpandedArray(expandedArray)\n    console.log({ checked, expanded, categories, checkedArray, expandedArray })\n  }\n\n  const handleCategoryInput = (key, value, index, type) => {\n    if (type === 'checked') {\n      const updatedCheckedArray = checkedArray.map((item, _index) =>\n        index === _index ? { ...item, [key]: value } : item,\n      )\n      setCheckedArray(updatedCheckedArray)\n    } else if (type === 'expanded') {\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\n        index === _index ? { ...item, [key]: value } : item,\n      )\n      setExpandedArray(updatedExpandedArray)\n    }\n  }\n\n  const updateCategoryForm = () => {\n    const form = new FormData()\n    expandedArray.forEach((item, index) => {\n      form.append('_id', item.value)\n      form.append('name', item.name)\n      form.append('parentId', item.parentId ? item.parentId : '')\n      form.append('type', item.type)\n    })\n    checkedArray.forEach((item, index) => {\n      form.append('_id', item.value)\n      form.append('name', item.name)\n      form.append('parentId', item.parentId ? item.parentId : '')\n      form.append('type', item.type)\n    })\n    dispatch(updateCategories(form))\n    setUpdateCategoryModal(false)\n  }\n\n  const deleteCategory = () => {\n    updateCheckedAndExpandedCategories()\n    setDeleteCategoryModal(true)\n  }\n  const deleteCategories = () => {\n    const checkedIdsArray = checkedArray.map((item, index) => ({\n      _id: item.value,\n    }))\n    const expandedIdsArray = expandedArray.map((item, index) => ({\n      _id: item.value,\n    }))\n    const idsArray = expandedIdsArray.concat(checkedIdsArray)\n\n    if (checkedIdsArray.length > 0) {\n      dispatch(deleteCategoriesAction(checkedIdsArray)).then((result) => {\n        if (result) {\n          dispatch(getCategory())\n          setDeleteCategoryModal(false)\n        }\n      })\n    }\n    setDeleteCategoryModal(false)\n  }\n\n  const displayDeleteCategoryModal = () => {\n    return (\n      <ReusableModel\n        modalTitle={'Confirm'}\n        show={deleteCategoryModal}\n        handleClose={() => setDeleteCategoryModal(false)}\n        buttons={[\n          {\n            label: 'No',\n            color: 'primary',\n            onClick: () => {\n              alert('no')\n            },\n          },\n          {\n            label: 'Yes',\n            color: 'danger',\n            onClick: deleteCategories,\n          },\n        ]}\n      >\n        <h5>Expanded Category</h5>\n        {expandedArray.map((item, index) => (\n          <span key={index}>{item.name}</span>\n        ))}\n        <h5>Checked Category</h5>\n        {checkedArray.map((item, index) => (\n          <span key={index}>{item.name}</span>\n        ))}\n      </ReusableModel>\n    )\n  }\n\n  const categoryList = createCategoryList(category.categories)\n\n  return (\n    <div>\n      <Layout sidebar>\n        <Grid container>\n          <Grid item xs={12}>\n            <Box style={{ display: 'flex' }}>\n              <Typography variant=\"h4\" component=\"h1\">\n                Category\n              </Typography>\n              <Button\n                style={{\n                  marginLeft: 'auto',\n                  backgroundColor: '#323232',\n                  color: 'white',\n                  fontSize: 'small',\n                }}\n                onClick={handleShow}\n              >\n                Add category\n              </Button>\n            </Box>\n          </Grid>\n        </Grid>\n        <Grid>\n          <Grid item xs={12}>\n            {/* <Box>\n              <ul>{displayCategories(category.categories)}</ul>\n            </Box> */}\n            <CheckboxTree\n              nodes={displayCategories(category.categories)}\n              checked={checked}\n              expanded={expanded}\n              onCheck={(checked) => setChecked(checked)}\n              onExpand={(expanded) => setExpanded(expanded)}\n              icons={{\n                check: <CheckBoxIcon />,\n                uncheck: <CheckBoxOutlineBlankIcon />,\n                halfCheck: <IndeterminateCheckBoxIcon />,\n                expandClose: <ArrowRightIcon />,\n                expandOpen: <ArrowDropDownIcon />,\n              }}\n            />\n          </Grid>\n        </Grid>\n        <Grid>\n          <Grid item xs={12}>\n            <button onClick={deleteCategory}>Delete</button>\n            <button onClick={updateCategory}>Edit</button>\n          </Grid>\n        </Grid>\n\n        {/* ----MODAL----- */}\n        <AddCategoryModel\n          show={show}\n          handleClose={() => setShow(false)}\n          onSubmit={handleClose}\n          modalTitle={'Add New Category'}\n          categoryName={categoryName}\n          setCategoryName={setCategoryName}\n          parentCategoryId={parentCategoryId}\n          setParentCategoryId={setParentCategoryId}\n          handleCategortImage={handleCategoryImage}\n          categoryList={categoryList}\n        />\n\n        <UpdateCategoryModel\n          show={updateCategoryModal}\n          handleClose={() => setUpdateCategoryModal(false)}\n          onSubmit={updateCategoryForm}\n          size=\"lg\"\n          modalTitle={'Update Categories'}\n          expandedArray={expandedArray}\n          checkedArray={checkedArray}\n          handleCategoryInput={handleCategoryInput}\n          categoryList={categoryList}\n        />\n\n        {displayDeleteCategoryModal()}\n      </Layout>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}