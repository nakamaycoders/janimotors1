{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zubai\\\\OneDrive\\\\Documents\\\\GitHub\\\\janimotors1\\\\admin-dashboard\\\\src\\\\views\\\\pages\\\\Category\\\\UpdateCategoryModel.jsx\";\nimport React from \"react\";\nimport ReusableModel from \"../../layouts/ReusableModel\";\nimport Grid from \"@mui/material/Grid\";\nimport TextField from \"@mui/material/TextField\";\nimport InputLabel from \"@mui/material/InputLabel\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport FormControl from \"@mui/material/FormControl\";\nimport Select from \"@mui/material/Select\";\nimport { Row, Col } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UpdateCategoryModel = props => {\n  const {\n    size,\n    handleClose,\n    onSubmit,\n    show,\n    modalTitle,\n    expandedArray,\n    checkedArray,\n    handleCategoryInput,\n    categoryList\n  } = props;\n  return /*#__PURE__*/_jsxDEV(ReusableModel, {\n    show: show,\n    handleClose: handleClose,\n    onSubmit: onSubmit,\n    size: size,\n    modalTitle: modalTitle,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Expanded Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), expandedArray.length > 0 && expandedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            margin: \"9px 3px\",\n            width: \"-webkit-fill-available\"\n          },\n          autoComplete: \"off\",\n          required: true,\n          id: \"outlined-required\",\n          label: \"Category Name\",\n          variant: \"outlined\",\n          value: item.name,\n          onChange: e => handleCategoryInput(\"name\", e.target.value, index, \"expanded\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            required: true,\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: item.parentId,\n            label: \"Select Category\",\n            onChange: e => handleCategoryInput(\"parentId\", e.target.value, index, \"expanded\"),\n            children: categoryList.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item.value,\n              children: item.name\n            }, item.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            required: true,\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: item.type,\n            onChange: e => handleCategoryInput('type', e.target.value, index, 'expanded'),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"store\",\n              children: \"store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"product\",\n              children: \"product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"page\",\n              children: \"page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          children: \"Checked Categories\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), checkedArray.length > 0 && checkedArray.map((item, index) => /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          style: {\n            margin: \"9px 3px\",\n            width: \"-webkit-fill-available\"\n          },\n          autoComplete: \"off\",\n          required: true,\n          id: \"outlined-required\",\n          label: \"Category Name\",\n          variant: \"outlined\",\n          value: item.name,\n          onChange: e => handleCategoryInput(\"name\", e.target.value, index, \"checked\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Select Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            required: true,\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: item.parentId,\n            label: \"Select Category\",\n            onChange: e => handleCategoryInput(\"parentId\", e.target.value, index, \"checked\"),\n            children: categoryList.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: item.value,\n              children: item.name\n            }, item.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Select Type\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            required: true,\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: item.type,\n            onChange: e => handleCategoryInput('type', e.target.value, index, 'checked'),\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"store\",\n              children: \"store\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"product\",\n              children: \"product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: \"page\",\n              children: \"page\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_c = UpdateCategoryModel;\nexport default UpdateCategoryModel;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateCategoryModel\");","map":{"version":3,"sources":["C:/Users/zubai/OneDrive/Documents/GitHub/janimotors1/admin-dashboard/src/views/pages/Category/UpdateCategoryModel.jsx"],"names":["React","ReusableModel","Grid","TextField","InputLabel","MenuItem","FormControl","Select","Row","Col","UpdateCategoryModel","props","size","handleClose","onSubmit","show","modalTitle","expandedArray","checkedArray","handleCategoryInput","categoryList","length","map","item","index","margin","width","name","e","target","value","parentId","type"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ReusableModel from \"../../layouts/ReusableModel\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport Select from \"@mui/material/Select\";\r\nimport {Row,Col} from 'react-bootstrap'\r\n\r\nconst UpdateCategoryModel = (props) => {\r\n  const {\r\n    size,\r\n    handleClose,\r\n    onSubmit,\r\n    show,\r\n    modalTitle,\r\n    expandedArray,\r\n    checkedArray,\r\n    handleCategoryInput,\r\n    categoryList,\r\n  } = props;\r\n  return (\r\n    <ReusableModel\r\n      show={show}\r\n      handleClose={handleClose}\r\n      onSubmit={onSubmit}\r\n      size={size}\r\n      modalTitle={modalTitle}\r\n    >\r\n      <Grid>\r\n        <Grid item>\r\n          <h6>Expanded Categories</h6>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {expandedArray.length > 0 &&\r\n        expandedArray.map((item, index) => (\r\n          <Row key={index}>\r\n            <Col>\r\n              <TextField\r\n                style={{ margin: \"9px 3px\", width: \"-webkit-fill-available\" }}\r\n                autoComplete=\"off\"\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Category Name\"\r\n                variant=\"outlined\"\r\n                value={item.name}\r\n                onChange={(e) =>\r\n                  handleCategoryInput(\"name\", e.target.value, index, \"expanded\")\r\n                }\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Select Category\r\n                </InputLabel>\r\n                <Select\r\n                  required\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={item.parentId}\r\n                  label=\"Select Category\"\r\n                  onChange={(e) =>\r\n                    handleCategoryInput(\r\n                      \"parentId\",\r\n                      e.target.value,\r\n                      index,\r\n                      \"expanded\"\r\n                    )\r\n                  }\r\n                >\r\n                  {categoryList.map((item) => (\r\n                    <MenuItem key={item.value} value={item.value}>\r\n                      {item.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                  {/* <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem> */}\r\n                </Select>\r\n              </FormControl>\r\n            </Col>\r\n\r\n            <Col>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Select Type\r\n                </InputLabel>\r\n                <Select\r\n                  required\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={item.type}\r\n                  onChange={(e) => handleCategoryInput('type',e.target.value,index,'expanded')}\r\n                >\r\n                  <MenuItem value=\"store\">store</MenuItem>\r\n                  <MenuItem value=\"product\">product</MenuItem>\r\n                  <MenuItem value=\"page\">page</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n\r\n        <Grid>\r\n            <Grid item>\r\n            <h6>Checked Categories</h6>\r\n            </Grid>\r\n        </Grid>  \r\n\r\n      {checkedArray.length > 0 &&\r\n        checkedArray.map((item, index) => (\r\n          <Row key={index}>\r\n            <Col>\r\n              <TextField\r\n                style={{ margin: \"9px 3px\", width: \"-webkit-fill-available\" }}\r\n                autoComplete=\"off\"\r\n                required\r\n                id=\"outlined-required\"\r\n                label=\"Category Name\"\r\n                variant=\"outlined\"\r\n                value={item.name}\r\n                onChange={(e) =>\r\n                  handleCategoryInput(\"name\", e.target.value, index, \"checked\")\r\n                }\r\n              />\r\n            </Col>\r\n\r\n            <Col>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Select Category\r\n                </InputLabel>\r\n                <Select\r\n                  required\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={item.parentId}\r\n                  label=\"Select Category\"\r\n                  onChange={(e) =>\r\n                    handleCategoryInput(\r\n                      \"parentId\",\r\n                      e.target.value,\r\n                      index,\r\n                      \"checked\"\r\n                    )\r\n                  }\r\n                >\r\n                  {categoryList.map((item) => (\r\n                    <MenuItem key={item.value} value={item.value}>\r\n                      {item.name}\r\n                    </MenuItem>\r\n                  ))}\r\n                  {/* <MenuItem value={10}>Ten</MenuItem>\r\n                    <MenuItem value={20}>Twenty</MenuItem>\r\n                    <MenuItem value={30}>Thirty</MenuItem> */}\r\n                </Select>\r\n              </FormControl>\r\n            </Col>\r\n\r\n            <Col>\r\n              <FormControl fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">\r\n                  Select Type\r\n                </InputLabel>\r\n                <Select\r\n                  required\r\n                  labelId=\"demo-simple-select-label\"\r\n                  id=\"demo-simple-select\"\r\n                  value={item.type}\r\n                  onChange={(e) => handleCategoryInput('type',e.target.value,index,'checked')} \r\n                >\r\n                  <MenuItem value=\"store\">store</MenuItem>\r\n                  <MenuItem value=\"product\">product</MenuItem>\r\n                  <MenuItem value=\"page\">page</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Col>\r\n          </Row>\r\n        ))}\r\n\r\n      {/* <input\r\n                style={{ margin: \"8px\", width: \"-webkit-fill-available\" }}\r\n                required\r\n                type=\"file\"\r\n                name=\"categoryImage\"\r\n                onChange={handleCategoryImage}\r\n              /> */}\r\n    </ReusableModel>\r\n  );\r\n};\r\n\r\nexport default UpdateCategoryModel;\r\n"]},"metadata":{},"sourceType":"module"}