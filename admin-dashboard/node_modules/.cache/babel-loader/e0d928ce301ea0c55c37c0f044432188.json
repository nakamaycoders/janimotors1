{"ast":null,"code":"import axios from 'axios';\nimport { api } from '../UrlConfig';\nimport store from '../store';\nimport { authConstants } from '../actions/constants';\nconst token = window.localStorage.getItem('token');\nconst axiosInstance = axios.create({\n  baseURL: api,\n  headers: {\n    Authorization: token ? \"Bearer \".concat(token) : ''\n  }\n});\naxiosInstance.interceptors.request.use(req => {\n  const {\n    auth\n  } = store.getState();\n\n  if (auth.token) {\n    req.headers.Authorization = \"Bearer \".concat(auth.token);\n  }\n\n  return req;\n});\naxiosInstance.interceptors.response.use(res => {\n  return res;\n}, error => {\n  console.log(error.response);\n  const status = error.response ? error.response.status : 500;\n\n  if (status && status === 500) {\n    localStorage.clear();\n    store.dispatch({\n      type: authConstants.LOGOUT_SUCCESS\n    });\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"sources":["C:/Users/zubai/OneDrive/Documents/GitHub/janimotors1/admin-dashboard/src/helpers/axios.js"],"names":["axios","api","store","authConstants","token","window","localStorage","getItem","axiosInstance","create","baseURL","headers","Authorization","interceptors","request","use","req","auth","getState","response","res","error","console","log","status","clear","dispatch","type","LOGOUT_SUCCESS","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,aAAT,QAA8B,sBAA9B;AAEA,MAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;AAEA,MAAMC,aAAa,GAAGR,KAAK,CAACS,MAAN,CAAa;AACjCC,EAAAA,OAAO,EAAET,GADwB;AAEjCU,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAER,KAAK,oBAAaA,KAAb,IAAuB;AADpC;AAFwB,CAAb,CAAtB;AAOAI,aAAa,CAACK,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CAAwCC,GAAD,IAAS;AAC9C,QAAM;AAAEC,IAAAA;AAAF,MAAWf,KAAK,CAACgB,QAAN,EAAjB;;AACA,MAAID,IAAI,CAACb,KAAT,EAAgB;AACdY,IAAAA,GAAG,CAACL,OAAJ,CAAYC,aAAZ,oBAAsCK,IAAI,CAACb,KAA3C;AACD;;AACD,SAAOY,GAAP;AACD,CAND;AAQAR,aAAa,CAACK,YAAd,CAA2BM,QAA3B,CAAoCJ,GAApC,CACGK,GAAD,IAAS;AACP,SAAOA,GAAP;AACD,CAHH,EAIGC,KAAD,IAAW;AACTC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACF,QAAlB;AACA,QAAMK,MAAM,GAAGH,KAAK,CAACF,QAAN,GAAiBE,KAAK,CAACF,QAAN,CAAeK,MAAhC,GAAyC,GAAxD;;AACA,MAAIA,MAAM,IAAIA,MAAM,KAAK,GAAzB,EAA8B;AAC5BlB,IAAAA,YAAY,CAACmB,KAAb;AACAvB,IAAAA,KAAK,CAACwB,QAAN,CAAe;AAAEC,MAAAA,IAAI,EAAExB,aAAa,CAACyB;AAAtB,KAAf;AACD;;AACD,SAAOC,OAAO,CAACC,MAAR,CAAeT,KAAf,CAAP;AACD,CAZH;AAeA,eAAeb,aAAf","sourcesContent":["import axios from 'axios'\nimport { api } from '../UrlConfig'\nimport store from '../store'\nimport { authConstants } from '../actions/constants'\n\nconst token = window.localStorage.getItem('token')\n\nconst axiosInstance = axios.create({\n  baseURL: api,\n  headers: {\n    Authorization: token ? `Bearer ${token}` : '',\n  },\n})\n\naxiosInstance.interceptors.request.use((req) => {\n  const { auth } = store.getState()\n  if (auth.token) {\n    req.headers.Authorization = `Bearer ${auth.token}`\n  }\n  return req\n})\n\naxiosInstance.interceptors.response.use(\n  (res) => {\n    return res\n  },\n  (error) => {\n    console.log(error.response)\n    const status = error.response ? error.response.status : 500\n    if (status && status === 500) {\n      localStorage.clear()\n      store.dispatch({ type: authConstants.LOGOUT_SUCCESS })\n    }\n    return Promise.reject(error)\n  },\n)\n\nexport default axiosInstance\n"]},"metadata":{},"sourceType":"module"}